# TODO нужно ли сделать кнопку обновления инстанса quiz в основном приложении?
# реализованные типы ответов feature - плотоядное, травоядное (1, 0), group - одиночка или стайное (1, 0), var - баллы
import json


class Quiz:  # класс с викториной
    q1 = {'text': 'Что из перечисленного вам кажется ближе к душе?',
          'answers': {'Находиться в шумной компании друзей': ('group', 1),
                      'Быть в центре внимания': ('group', 1),
                      'Наслаждаться прогулкой одному': ('group', 0),
                      'Побыть наедине с природой': ('group', 0), }}

    q2 = {'text': 'Какое блюдо тебе кажется наиболее вкусным?',
          'answers': {'Большой жаренный стейк со специями': ('feature', 1),
                      'Нежное рыбное филе под соусом': ('feature', 1),
                      'Салат из свежих овощей': ('feature', 0),
                      'Корзинка спелых фруктов': ('feature', 0), }}

    q3 = {'text': 'Какой стиль плавания тебе подходит больше?',
          'answers': {'Вальяжные взмахи с небольшими брызгами': ('var', 0),
                      'Можете немного толкать воду': ('var', 1),
                      'Создаете быстрые и короткие всплески': ('var', 2),
                      'Просто любите побарахтаться': ('var', 3), }}

    q4 = {'text': 'Какая у вас есть сильная сторона?',
          'answers': {'Пушистость': ('var', 0),
                      'Смекалистость': ('var', 1),
                      'Стремительность': ('var', 2),
                      'Могучесть': ('var', 3), }}

    q5 = {'text': 'Какое занятие вам кажется более интересным?',
          'answers': {'Помедитировать в тишине': ('var', 0),
                      'Поиграть в прятки с кошкой': ('var', 1),
                      'Пробежать кросс по лесу': ('var', 2),
                      'Устроить поход в горы': ('var', 3), }}

    q6 = {'text': 'Какой из элементов стихии Вам кажется, что подойдет больше?',
          'answers': {'Земля': ('var', 0),
                      'Вода': ('var', 1),
                      'Воздух': ('var', 2),
                      'Огонь': ('var', 3), }}

    # q = {'text': 'текст вопроса',  # Шаблон вопроса
    #      'answers': {'ответ1': ('var', 0),
    #                  'ответ2': ('var', 1),
    #                  'ответ3': ('var', 2),
    #                  'ответ4': ('var', 3), }}

    quiz = [q1, q2, q3, q4, q5, q6]  # Список использующихся вопросов викторины

    def get_question(self, number):
        return self.quiz[number]

    def get_length(self):
        return len(self.quiz)


class Animals:  # класс для хранения и вывода результата викторины
    @staticmethod
    def get_animal_data(result):
        prefix = ''
        if result >= 1000:  # s - стайное, o - одиночное, // p - плотоядное, t - травоядное
            if (result - 1000) >= 100:  # group/feature
                prefix = 'sp'
            else:
                prefix = 'st'
        else:
            if result >= 100:
                prefix = 'op'
            else:
                prefix = 'ot'

        while result > 100:
            result = int(str(result)[1:])

        if 0 < result <= 3:
            code = '0'
        elif 3 < result <= 6:
            code = '1'
        elif 6 < result <= 9:
            code = '2'
        else:
            code = '3'

        return animals[prefix + code]


# sp st op ot
animals = {
    'sp0': {
        'name': 'Дельфин',
        'description': '',
        'image': 'Дельфин.jpg',
    },
    'sp1': {
        'name': 'Пингвин',
        'description': '',
        'image': 'Пингвин.jpg',
    },
    'sp2': {
        'name': 'Лиса',
        'description': '',
        'image': 'Лиса.jpg',
    },
    'sp3': {
        'name': 'Лев',
        'description': '',
        'image': 'Лев.jpg',
    },
    'op0': {
        'name': 'Неясыть',
        'description': '',
        'image': 'Неясыть.jpg',
    },
    'op1': {
        'name': 'Белый медведь',
        'description': '',
        'image': 'Белый медведь.jpg',
    },
    'op2': {
        'name': 'Куница',
        'description': '',
        'image': 'Куница.jpg',
    },
    'op3': {
        'name': 'Акула',
        'description': '',
        'image': 'Акула.jpg',
    },
    'st0': {
        'name': 'Капибара',
        'description': '',
        'image': 'Капибара.jpg',
    },
    'st1': {
        'name': 'Лама',
        'description': '',
        'image': 'Лама.jpg',
    },
    'st2': {
        'name': 'Лемур',
        'description': '',
        'image': 'Лемур.jpg',
    },
    'st3': {
        'name': 'Газель',
        'description': '',
        'image': 'Газель.jpg',
    },
    'ot0': {
        'name': 'Панда',
        'description': '',
        'image': 'Панда.jpg',
    },
    'ot1': {
        'name': 'Коала',
        'description': '',
        'image': 'Коала.jpg',
    },
    'ot2': {
        'name': 'Хомяк',
        'description': '',
        'image': 'Хомяк.jpg',
    },
    'ot3': {
        'name': 'Белка',
        'description': '',
        'image': 'Белка.jpg',
    }
}

# with open('quiz_animals', 'wt') as f:
#     f.write(json.dumps(animals))

# sp Волки, львы, дельфины, лисы, касатка, Пингвин      дельфин, пигвин, волк, лев
# op Акула, крокодил, белый медведь, пантера, леопард Неясыть Куница рысь медоед       Неясыть Белый медведь, Куница. Акула
# st Капибара, слоны, кролик, газель Лемур Лама Жираф           Капибара, Лама, Лемур, Газель
# ot Белка Хомяк Панда Коала            Панда, коала, хомяк, белка
